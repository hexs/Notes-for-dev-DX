{
    "numpy": {
        "use_for": "NumPy is primarily used for numerical computing and data analysis. It provides support for large, multi-dimensional arrays and matrices, along with a vast collection of high-level mathematical functions to operate on these arrays efficiently. NumPy is widely used in scientific computing, machine learning, signal and image processing, and more.",
        "library_list": [
            "numpy"
        ],
        "project used": ["all"]
    },
    "scipy": {
        "use_for": "SciPy is a powerful scientific computing library used for numerical integration, interpolation, linear algebra, optimization, signal processing, statistics, image processing, and more. It builds upon NumPy and adds substantial library functionality useful for scientific and engineering applications.",
        "library_list": [
            "numpy",
            "scipy"
        ],
        "project used": ["all"]
    },
    "pandas": {
        "use_for": "Pandas is a data manipulation and analysis library. It provides data structures and data analysis tools for working with structured (tabular, multidimensional, potentially heterogeneous) and time series data. Pandas is particularly well-suited for data cleaning, preprocessing, and exploratory data analysis.",
        "library_list": [
            "numpy",
            "pandas",
            "python_dateutil",
            "pytz",
            "six",
            "tzdata"
        ],
        "project used": ["all"]
    },
    "opencv-python": {
        "use_for": "OpenCV-Python is a library aimed at computer vision and machine learning. It provides functions for image and video processing, including object detection, facial recognition, motion tracking, and more. OpenCV is widely used in applications like robotics, security, and augmented reality.",
        "library_list": [
            "numpy",
            "opencv_python"
        ],
        "project used": ["Auto Inspection"]
    },
    "ultralytics": {
        "use_for": "Ultralytics is a computer vision library focused on object detection and tracking. It provides state-of-the-art models and tools for tasks like object detection, instance segmentation, and image classification. Ultralytics is known for its high-performance and easy-to-use APIs.",
        "library_list": [
            "certifi",
            "charset_normalizer",
            "colorama",
            "contourpy",
            "cycler",
            "filelock",
            "fonttools",
            "fsspec",
            "idna",
            "intel_openmp",
            "jinja2",
            "kiwisolver",
            "MarkupSafe",
            "matplotlib",
            "mkl",
            "mpmath",
            "networkx",
            "numpy",
            "opencv_python",
            "packaging",
            "pandas",
            "pillow",
            "psutil",
            "pyparsing",
            "python_dateutil",
            "pytz",
            "PyYAML",
            "py_cpuinfo",
            "requests",
            "scipy",
            "seaborn",
            "six",
            "sympy",
            "tbb",
            "thop",
            "torch",
            "torchvision",
            "tqdm",
            "typing_extensions",
            "tzdata",
            "ultralytics",
            "urllib3"
        ],
        "project used": []
    },
    "tensorflow": {
        "use_for": "TensorFlow is a powerful open-source library for machine learning and deep learning tasks. It provides a flexible ecosystem of tools, libraries, and community resources for building and deploying machine learning models across various platforms and devices.",
        "library_list": [
            "absl_py",
            "astunparse",
            "certifi",
            "charset_normalizer",
            "flatbuffers",
            "gast",
            "google_pasta",
            "grpcio",
            "h5py",
            "idna",
            "keras",
            "libclang",
            "Markdown",
            "markdown_it_py",
            "MarkupSafe",
            "mdurl",
            "ml_dtypes",
            "namex",
            "numpy",
            "optree",
            "opt_einsum",
            "packaging",
            "protobuf",
            "pygments",
            "requests",
            "rich",
            "setuptools",
            "six",
            "tensorboard",
            "tensorboard_data_server",
            "tensorflow",
            "tensorflow_intel",
            "tensorflow_io_gcs_filesystem",
            "termcolor",
            "typing_extensions",
            "urllib3",
            "werkzeug",
            "wheel",
            "wrapt"
        ],
        "project used": ["Auto Inspection"]
    },
    "keras": {
        "use_for": "Keras is a high-level neural networks API, written in Python and capable of running on top of TensorFlow, CNTK, or Theano. It is designed to enable fast experimentation with deep neural networks, focusing on being user-friendly, modular, and extensible.",
        "library_list": [
            "absl_py",
            "h5py",
            "keras",
            "markdown_it_py",
            "mdurl",
            "ml_dtypes",
            "namex",
            "numpy",
            "optree",
            "pygments",
            "rich",
            "typing_extensions"
        ],
        "project used": ["Auto Inspection"]
    },
    "scikit-learn": {
        "use_for": "Scikit-learn is a machine learning library that features various classification, regression, and clustering algorithms, as well as tools for model evaluation and data preprocessing. It is designed to interoperate with NumPy and SciPy, and is widely used for machine learning and data mining tasks.",
        "library_list": [
            "joblib",
            "numpy",
            "scikit_learn",
            "scipy",
            "threadpoolctl"
        ],
        "project used": ["AC Switch"]
    },
    "pytesseract": {
        "use_for": "PyTesseract is a Python wrapper for Google's Tesseract-OCR Engine. It is used for optical character recognition (OCR) to extract text from images and PDFs. PyTesseract provides a simple interface for integrating OCR capabilities into Python applications.",
        "library_list": [
            "packaging",
            "pillow",
            "pytesseract"
        ],
        "project used": []
    },
    "pyperclip": {
        "use_for": "PyPerClip is a cross-platform Python module for copying and pasting text to and from the clipboard. It provides a simple interface for accessing the system clipboard, making it easy to transfer data between applications or scripts.",
        "library_list": [
            "pyperclip"
        ],
        "project used": [""]
    },
    "pygame": {
        "use_for": "Pygame is a set of Python modules designed for writing video games. It includes computer graphics and sound libraries designed to get moving images and sounds onto the screen and speakers quickly and efficiently.",
        "library_list": [
            "pygame"
        ],
        "project used": ["all"]
    },
    "pygame_gui": {
        "use_for": "Pygame GUI is a module for creating user interfaces with Pygame. It provides a set of UI elements like buttons, text boxes, and menus, making it easier to build interactive applications and games with Pygame.",
        "library_list": [
            "pygame_ce",
            "pygame_gui",
            "python_i18n"
        ],
        "project used": ["all"]
    },
    "requests": {
        "use_for": "Requests is a popular Python library for making HTTP requests. It provides a simple and elegant interface for sending HTTP/1.1 requests, handling cookies, file uploads, and more. Requests is widely used for web scraping, interacting with APIs, and automating web tasks.",
        "library_list": [
            "certifi",
            "charset_normalizer",
            "idna",
            "requests",
            "urllib3"
        ],
        "project used": ["Auto Inspection"]
    },
    "beautifulsoup4": {
        "use_for": "Beautiful Soup is a Python library for web scraping purposes. It provides a way to parse HTML and XML documents, allowing you to navigate and search the tree-like structure of the document, and extract data from it.",
        "library_list": [
            "beautifulsoup4",
            "soupsieve"
        ],
        "project used": ["Auto Inspection"]
    },
    "flask": {
        "use_for": "Flask is a lightweight and flexible Python web framework for building web applications. It provides tools for routing, handling HTTP requests and responses, rendering templates, and more. Flask is known for its simplicity and ease of use.",
        "library_list": [
            "blinker",
            "click",
            "colorama",
            "flask",
            "itsdangerous",
            "jinja2",
            "MarkupSafe",
            "werkzeug"
        ],
        "project used": []
    },
    "jinja2": {
        "use_for": "Jinja2 is a modern and designer-friendly templating engine for Python. It is used to separate the presentation logic from the application logic, making it easier to maintain and modify the user interface. Jinja2 is often used in conjunction with web frameworks like Flask and Django.",
        "library_list": [
            "jinja2",
            "MarkupSafe"
        ],
        "project used": []
    },
    "PyAutoGUI": {
        "use_for": "PyAutoGUI is a cross-platform GUI automation library for Python. It allows you to control the mouse, keyboard, and screen programmatically, enabling tasks like clicking, typing, taking screenshots, and more. PyAutoGUI is useful for automating repetitive tasks and testing GUI applications.",
        "project used": ["Auto Inspection"]
    },
    "keyboard": {
        "use_for": "Keyboard is a Python library for controlling and monitoring the keyboard. It provides functions for simulating keyboard input, capturing keyboard events, and checking key states. Keyboard is useful for automating keyboard-related tasks and building keyboard-driven applications.",
        "library_list": [
            "keyboard"
        ],
        "project used": ["Auto Inspection"]
    },
    "matplotlib": {
        "use_for": "Matplotlib is a plotting library for creating static, animated, and interactive visualizations in Python. It produces publication-quality figures in a variety of hardcopy formats and interactive environments across platforms. Matplotlib is widely used for data visualization in scientific computing, finance, and many other domains.",
        "library_list": [
            "contourpy",
            "cycler",
            "fonttools",
            "kiwisolver",
            "matplotlib",
            "numpy",
            "packaging",
            "pillow",
            "pyparsing",
            "python_dateutil",
            "six"
        ],
        "project used": []
    },
    "notebook": {
        "use_for": "Notebook (or IPython Notebook) is a web-based interactive computational environment for creating and sharing Jupyter notebooks. Notebooks contain live code, visualizations, and narrative text, making them useful for data analysis, scientific computing, and educational purposes.",
        "library_list": [
            "anyio",
            "argon2_cffi",
            "argon2_cffi_bindings",
            "arrow",
            "asttokens",
            "async_lru",
            "attrs",
            "Babel",
            "beautifulsoup4",
            "bleach",
            "certifi",
            "cffi",
            "charset_normalizer",
            "colorama",
            "comm",
            "debugpy",
            "decorator",
            "defusedxml",
            "exceptiongroup",
            "executing",
            "fastjsonschema",
            "fqdn",
            "h11",
            "httpcore",
            "httpx",
            "idna",
            "ipykernel",
            "ipython",
            "isoduration",
            "jedi",
            "jinja2",
            "json5",
            "jsonpointer",
            "jsonschema",
            "jsonschema_specifications",
            "jupyterlab",
            "jupyterlab_pygments",
            "jupyterlab_server",
            "jupyter_client",
            "jupyter_core",
            "jupyter_events",
            "jupyter_lsp",
            "jupyter_server",
            "jupyter_server_terminals",
            "MarkupSafe",
            "matplotlib_inline",
            "mistune",
            "nbclient",
            "nbconvert",
            "nbformat",
            "nest_asyncio",
            "notebook",
            "notebook_shim",
            "overrides",
            "packaging",
            "pandocfilters",
            "parso",
            "platformdirs",
            "prometheus_client",
            "prompt_toolkit",
            "psutil",
            "pure_eval",
            "pycparser",
            "pygments",
            "python_dateutil",
            "python_json_logger",
            "pywin32",
            "pywinpty",
            "PyYAML",
            "pyzmq",
            "referencing",
            "requests",
            "rfc3339_validator",
            "rfc3986_validator",
            "rpds_py",
            "Send2Trash",
            "six",
            "sniffio",
            "soupsieve",
            "stack_data",
            "terminado",
            "tinycss2",
            "tomli",
            "tornado",
            "traitlets",
            "types_python_dateutil",
            "typing_extensions",
            "uri_template",
            "urllib3",
            "wcwidth",
            "webcolors",
            "webencodings",
            "websocket_client"
        ],
        "project used": ["all"]
    },
    "jupyterlab": {
        "use_for": "JupyterLab is a web-based interactive development environment for Jupyter notebooks, code, and data. It is a next-generation user interface for Project Jupyter, providing a flexible and extensible environment for working with notebooks, text editors, terminals, and more.",
        "library_list": [
            "anyio",
            "argon2_cffi",
            "argon2_cffi_bindings",
            "arrow",
            "asttokens",
            "async_lru",
            "attrs",
            "Babel",
            "beautifulsoup4",
            "bleach",
            "certifi",
            "cffi",
            "charset_normalizer",
            "colorama",
            "comm",
            "debugpy",
            "decorator",
            "defusedxml",
            "exceptiongroup",
            "executing",
            "fastjsonschema",
            "fqdn",
            "h11",
            "httpcore",
            "httpx",
            "idna",
            "ipykernel",
            "ipython",
            "isoduration",
            "jedi",
            "jinja2",
            "json5",
            "jsonpointer",
            "jsonschema",
            "jsonschema_specifications",
            "jupyterlab",
            "jupyterlab_pygments",
            "jupyterlab_server",
            "jupyter_client",
            "jupyter_core",
            "jupyter_events",
            "jupyter_lsp",
            "jupyter_server",
            "jupyter_server_terminals",
            "MarkupSafe",
            "matplotlib_inline",
            "mistune",
            "nbclient",
            "nbconvert",
            "nbformat",
            "nest_asyncio",
            "notebook_shim",
            "overrides",
            "packaging",
            "pandocfilters",
            "parso",
            "platformdirs",
            "prometheus_client",
            "prompt_toolkit",
            "psutil",
            "pure_eval",
            "pycparser",
            "pygments",
            "python_dateutil",
            "python_json_logger",
            "pywin32",
            "pywinpty",
            "PyYAML",
            "pyzmq",
            "referencing",
            "requests",
            "rfc3339_validator",
            "rfc3986_validator",
            "rpds_py",
            "Send2Trash",
            "six",
            "sniffio",
            "soupsieve",
            "stack_data",
            "terminado",
            "tinycss2",
            "tomli",
            "tornado",
            "traitlets",
            "types_python_dateutil",
            "typing_extensions",
            "uri_template",
            "urllib3",
            "wcwidth",
            "webcolors",
            "webencodings",
            "websocket_client"
        ],
        "project used": ["all"]
    },
    "auto-py-to-exe": {
        "use_for": "Auto-Py-To-Exe is a tool for packaging Python scripts into standalone executable files. It allows you to convert Python scripts and their dependencies into a single executable file that can be run on systems without Python installed, making it easier to distribute and run Python applications.",
        "library_list": [
            "altgraph",
            "auto_py_to_exe",
            "bottle",
            "bottle",
            "certifi",
            "cffi",
            "charset_normalizer",
            "Eel",
            "future",
            "gevent",
            "gevent_websocket",
            "greenlet",
            "idna",
            "packaging",
            "pefile",
            "pycparser",
            "pyinstaller",
            "pyinstaller_hooks_contrib",
            "pyparsing",
            "pywin32_ctypes",
            "requests",
            "setuptools",
            "urllib3",
            "whichcraft",
            "zope.event",
            "zope.interface"
        ],
        "project used": ["all"]
    },
    "tabulate": {
        "use_for": "Tabulate is a Python library for creating pretty-printed tables from data in various formats (lists, dictionaries, etc.). It provides a simple and flexible way to display tabular data in a visually appealing and well-formatted manner, making it useful for command-line interfaces and data visualization.",
        "library_list": [
            "tabulate"
        ],
        "project used": ["all"]
    },
    "prettytable": {
        "use_for": "PrettyTable is a Python library for printing beautiful ASCII tables in the terminal or command-line interface. It provides a simple and intuitive way to create and format tables with customizable styles, making it useful for displaying tabular data in a clear and organized manner.",
        "library_list": [
            "prettytable",
            "wcwidth"
        ],
        "project used": ["all"]
    },
    "pyzbar": {
        "use_for": "PyZBar is a Python library for reading one-dimensional (1D) and two-dimensional (2D) barcodes and QR codes. It provides a simple interface for decoding various barcode formats from images or video streams, making it useful for applications that require barcode scanning and processing.",
        "library_list": [
            "pyzbar"
        ],
        "project used": ["QR code"]
    },
    "pywin32": {
        "use_for": "PyWin32 is a set of Python modules that provide access to many of the Windows APIs, including but not limited to Windows Services, Windows Event Log, Windows Shells, and more. It allows Python scripts to interact with and automate various aspects of the Windows operating system.",
        "library_list": [
            "pywin32"
        ],
        "project used": ["all"]
    },
    "mdutils": {
        "use_for": "MDUtils is a Python library for creating and modifying Markdown files programmatically. It provides functions for creating and manipulating Markdown documents, including adding headers, lists, tables, links, and more. MDUtils is useful for generating dynamic Markdown content from Python scripts.",
        "project used": ["all"]
    }
}